.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % python downsampled_train_gpr_RBFmodel.py 
Looking for processed files matching 'interpolated_*.csv' in 'csv_data/interpolated/' for runs: [1, 2]
Total combined processed data (runs [1, 2]): 18694 rows from 10 files.

Original development_df size (runs 1 & 2): 18694
Size after filtering by 'Curvature_Active' == 1: 10582
Applying in-memory downsampling by factor N=3 to activity-filtered data...
Data size after in-memory downsampling: 3528

Starting Leave-One-Object-Out Cross-Validation on 5 object group(s)...
Data being used for CV has 3528 rows.

--- Fold 1 (Testing on Object IDs: ['0_005']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 1...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.1, 10.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 1 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k1__k2__length_scale is close to the specified lower bound 0.1. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 113.74 seconds.
  Learned kernel for fold 1: 0.864**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.205)
  Predicting with GPR for fold 1...
  Fold 1 Test MSE: 0.000606
  Fold 1 Test R2 Score: -380.757610

  --- Example: First Fold - Predictions (Head) ---
  y_test_fold_original (head):
2167   0.000700
2170   0.001400
2173   0.002000
2176   0.002700
2179   0.003400
Name: Curvature, dtype: float64
  y_pred_original (head):
0   0.017144
1   0.018507
2   0.017574
3   0.012166
4   0.021173
dtype: float64
  ---
--- End of Fold 1 ---

--- Fold 2 (Testing on Object IDs: ['0_007142']) ---
  Training data shape for fold: (2822, 11)
  Test data shape for fold: (706, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 2...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.1, 10.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 2 (Data size: 2822)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k1__k2__length_scale is close to the specified lower bound 0.1. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 110.86 seconds.
  Learned kernel for fold 2: 0.794**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.188)
  Predicting with GPR for fold 2...
  Fold 2 Test MSE: 0.000081
  Fold 2 Test R2 Score: -23.464106
--- End of Fold 2 ---

--- Fold 3 (Testing on Object IDs: ['0_01']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 3...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.1, 10.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 3 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k1__k2__length_scale is close to the specified lower bound 0.1. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 105.02 seconds.
  Learned kernel for fold 3: 0.83**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.196)
  Predicting with GPR for fold 3...
  Fold 3 Test MSE: 0.000037
  Fold 3 Test R2 Score: -4.695042
--- End of Fold 3 ---

--- Fold 4 (Testing on Object IDs: ['0_01818']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 4...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.1, 10.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 4 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k1__k2__length_scale is close to the specified lower bound 0.1. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 97.79 seconds.
  Learned kernel for fold 4: 0.85**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.131)
  Predicting with GPR for fold 4...
  Fold 4 Test MSE: 0.000126
  Fold 4 Test R2 Score: -4.881689
--- End of Fold 4 ---

--- Fold 5 (Testing on Object IDs: ['0_05']) ---
  Training data shape for fold: (2821, 11)
  Test data shape for fold: (707, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 5...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.1, 10.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 5 (Data size: 2821)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k1__k2__length_scale is close to the specified lower bound 0.1. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 129.67 seconds.
  Learned kernel for fold 5: 0.873**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.37)
  Predicting with GPR for fold 5...
  Fold 5 Test MSE: 0.001090
  Fold 5 Test R2 Score: -5.645844
--- End of Fold 5 ---

--- Cross-Validation Finished ---

Cross-Validation Results Summary:
   fold object_tested_str       mse          r2  fitting_time_s
0     1             0_005  0.000606 -380.757610      113.742902
1     2          0_007142  0.000081  -23.464106      110.859517
2     3              0_01  0.000037   -4.695042      105.015016
3     4           0_01818  0.000126   -4.881689       97.790319
4     5              0_05  0.001090   -5.645844      129.670814

Average CV MSE: 0.000388 (Std: 0.000455)
Average CV R2 Score: -83.888858 (Std: 166.145997)
Average Fitting Time per Fold: 111.42s
CV results saved to gpr_cv_results.csv

--- GPR Training and Cross-Validation Script Finished ---
Next steps: 
1. Analyze CV results from 'gpr_cv_results.csv': Check consistency, errors per object, learned kernels.
2. If training time per fold was too long with N_downsample_factor=2, try N_downsample_factor=3.
3. Hyperparameter Tuning: Based on results, you might adjust kernel choices, initial parameters, or bounds.
4. Final Model Training: Once satisfied, train a final GPR model on ALL development data.
5. Final Evaluation: Test this final model on your hold-out test set (processed runs 3 & 4).
.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % 



---------------------------------
fold,object_tested,mse,r2,fitting_time_s,learned_kernel,object_tested_str
1,0_005,0.0006062247410367574,-380.7576104669849,113.74290156364441,0.864**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.205),0_005
2,0_007142,8.135706629142577e-05,-23.464105570180823,110.85951685905457,0.794**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.188),0_007142
3,0_01,3.65002484880589e-05,-4.695041996272792,105.01501607894897,0.83**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.196),0_01
4,0_01818,0.0001262993346821602,-4.881688963443688,97.79031872749329,0.85**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.131),0_01818
5,0_05,0.0010900421829698821,-5.645844132496751,129.670814037323,0.873**2 * RBF(length_scale=0.1) + WhiteKernel(noise_level=0.37),0_05
