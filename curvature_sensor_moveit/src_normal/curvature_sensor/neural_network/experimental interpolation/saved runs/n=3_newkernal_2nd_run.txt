fold,object_tested,mse,r2,fitting_time_s,learned_kernel,object_tested_str
1,0_005,0.0010357111441456847,-651.217873600625,341.40790128707886,"4.11**2 * RationalQuadratic(alpha=0.00944, length_scale=0.181) + WhiteKernel(noise_level=0.001)",0_005
2,0_007142,7.354329006103389e-05,-21.114499625476025,332.3750522136688,"2.87**2 * RationalQuadratic(alpha=0.0199, length_scale=0.184) + WhiteKernel(noise_level=0.0633)",0_007142
3,0_01,2.5759297698299584e-05,-3.0191584513267733,371.84584307670593,"3.3**2 * RationalQuadratic(alpha=0.014, length_scale=0.147) + WhiteKernel(noise_level=0.001)",0_01
4,0_01818,0.00012669522892183718,-4.900125535465694,371.1419608592987,"2.98**2 * RationalQuadratic(alpha=0.0189, length_scale=0.178) + WhiteKernel(noise_level=0.001)",0_01818
5,0_05,0.0011073594340999101,-5.751425139921533,326.28815484046936,"1.1**2 * RationalQuadratic(alpha=0.329, length_scale=0.0763) + WhiteKernel(noise_level=0.24)",0_05


-----------

.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % python downsampled_train_gpr_model.py
Looking for processed files matching 'interpolated_*.csv' in 'csv_data/interpolated/' for runs: [1, 2]
Total combined processed data (runs [1, 2]): 18694 rows from 10 files.

Original development_df size (runs 1 & 2): 18694
Size after filtering by 'Curvature_Active' == 1: 10582
Applying in-memory downsampling by factor N=3 to activity-filtered data...
Data size after in-memory downsampling: 3528

Starting Leave-One-Object-Out Cross-Validation on 5 object group(s)...
Data being used for CV has 3528 rows.

--- Fold 1 (Testing on Object IDs: ['0_005']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 1...
  Using Kernel Params: alpha_init=0.5, alpha_bounds=(0.0001, 100.0)
  Using Kernel Params: noise_level_init=0.1, noise_bounds=(0.001, 10.0)
  Fitting GPR for fold 1 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 0.001. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 341.41 seconds.
  Learned kernel for fold 1: 4.11**2 * RationalQuadratic(alpha=0.00944, length_scale=0.181) + WhiteKernel(noise_level=0.001)
  Predicting with GPR for fold 1...
  Fold 1 Test MSE: 0.001036
  Fold 1 Test R2 Score: -651.217874

  --- Example: First Fold - Predictions (Head) ---
  y_test_fold_original (head):
2167   0.000700
2170   0.001400
2173   0.002000
2176   0.002700
2179   0.003400
Name: Curvature, dtype: float64
  y_pred_original (head):
0   0.026863
1   0.025007
2   0.025500
3   0.033101
4   0.039097
dtype: float64
  ---
--- End of Fold 1 ---

--- Fold 2 (Testing on Object IDs: ['0_007142']) ---
  Training data shape for fold: (2822, 11)
  Test data shape for fold: (706, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 2...
  Using Kernel Params: alpha_init=0.5, alpha_bounds=(0.0001, 100.0)
  Using Kernel Params: noise_level_init=0.1, noise_bounds=(0.001, 10.0)
  Fitting GPR for fold 2 (Data size: 2822)...
  GPR fitting complete. Time taken: 332.38 seconds.
  Learned kernel for fold 2: 2.87**2 * RationalQuadratic(alpha=0.0199, length_scale=0.184) + WhiteKernel(noise_level=0.0633)
  Predicting with GPR for fold 2...
  Fold 2 Test MSE: 0.000074
  Fold 2 Test R2 Score: -21.114500
--- End of Fold 2 ---

--- Fold 3 (Testing on Object IDs: ['0_01']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 3...
  Using Kernel Params: alpha_init=0.5, alpha_bounds=(0.0001, 100.0)
  Using Kernel Params: noise_level_init=0.1, noise_bounds=(0.001, 10.0)
  Fitting GPR for fold 3 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 0.001. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 371.85 seconds.
  Learned kernel for fold 3: 3.3**2 * RationalQuadratic(alpha=0.014, length_scale=0.147) + WhiteKernel(noise_level=0.001)
  Predicting with GPR for fold 3...
  Fold 3 Test MSE: 0.000026
  Fold 3 Test R2 Score: -3.019158
--- End of Fold 3 ---

--- Fold 4 (Testing on Object IDs: ['0_01818']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 4...
  Using Kernel Params: alpha_init=0.5, alpha_bounds=(0.0001, 100.0)
  Using Kernel Params: noise_level_init=0.1, noise_bounds=(0.001, 10.0)
  Fitting GPR for fold 4 (Data size: 2823)...
/Users/bipinrai/Desktop/experimental interpolation/.venv/lib/python3.13/site-packages/sklearn/gaussian_process/kernels.py:442: ConvergenceWarning: The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 0.001. Decreasing the bound and calling fit again may find a better value.
  warnings.warn(
  GPR fitting complete. Time taken: 371.14 seconds.
  Learned kernel for fold 4: 2.98**2 * RationalQuadratic(alpha=0.0189, length_scale=0.178) + WhiteKernel(noise_level=0.001)
  Predicting with GPR for fold 4...
  Fold 4 Test MSE: 0.000127
  Fold 4 Test R2 Score: -4.900126
--- End of Fold 4 ---

--- Fold 5 (Testing on Object IDs: ['0_05']) ---
  Training data shape for fold: (2821, 11)
  Test data shape for fold: (707, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 5...
  Using Kernel Params: alpha_init=0.5, alpha_bounds=(0.0001, 100.0)
  Using Kernel Params: noise_level_init=0.1, noise_bounds=(0.001, 10.0)
  Fitting GPR for fold 5 (Data size: 2821)...
  GPR fitting complete. Time taken: 326.29 seconds.
  Learned kernel for fold 5: 1.1**2 * RationalQuadratic(alpha=0.329, length_scale=0.0763) + WhiteKernel(noise_level=0.24)
  Predicting with GPR for fold 5...
  Fold 5 Test MSE: 0.001107
  Fold 5 Test R2 Score: -5.751425
--- End of Fold 5 ---

--- Cross-Validation Finished ---

Cross-Validation Results Summary:
   fold object_tested_str       mse          r2  fitting_time_s
0     1             0_005  0.001036 -651.217874      341.407901
1     2          0_007142  0.000074  -21.114500      332.375052
2     3              0_01  0.000026   -3.019158      371.845843
3     4           0_01818  0.000127   -4.900126      371.141961
4     5              0_05  0.001107   -5.751425      326.288155

Average CV MSE: 0.000474 (Std: 0.000547)
Average CV R2 Score: -137.200616 (Std: 287.435515)
Average Fitting Time per Fold: 348.61s
CV results saved to gpr_cv_results.csv

--- GPR Training and Cross-Validation Script Finished ---
Next steps: 
1. Analyze CV results from 'gpr_cv_results.csv': Check consistency, errors per object, learned kernels.
2. If training time per fold was too long with N_downsample_factor=2, try N_downsample_factor=3.
3. Hyperparameter Tuning: Based on results, you might adjust kernel choices, initial parameters, or bounds.
4. Final Model Training: Once satisfied, train a final GPR model on ALL development data.
5. Final Evaluation: Test this final model on your hold-out test set (processed runs 3 & 4).
.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % 
