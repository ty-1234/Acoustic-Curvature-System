.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % python downsampled_train_gpr_model.py
Looking for processed files matching 'interpolated_*.csv' in 'csv_data/interpolated/' for runs: [1, 2]
Total combined processed data (runs [1, 2]): 18694 rows from 10 files.

Original development_df size (runs 1 & 2): 18694
Size after filtering by 'Curvature_Active' == 1: 10582
Applying in-memory downsampling by factor N=3 to activity-filtered data...
Data size after in-memory downsampling: 3528

Starting Leave-One-Object-Out Cross-Validation on 5 object group(s)...
Data being used for CV has 3528 rows.

--- Fold 1 (Testing on Object IDs: ['0_005']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 1...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.01, 100.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 1 (Data size: 2823)...
  GPR fitting complete. Time taken: 145.45 seconds.
  Learned kernel for fold 1: 0.811**2 * RBF(length_scale=0.086) + WhiteKernel(noise_level=0.186)
  Predicting with GPR for fold 1...
  Fold 1 Test MSE: 0.000441
  Fold 1 Test R2 Score: -276.486249

  --- Example: First Fold - Predictions (Head) ---
  y_test_fold_original (head):
2167   0.000700
2170   0.001400
2173   0.002000
2176   0.002700
2179   0.003400
Name: Curvature, dtype: float64
  y_pred_original (head):
0   0.018141
1   0.018688
2   0.018278
3   0.014023
4   0.019751
dtype: float64
  ---
--- End of Fold 1 ---

--- Fold 2 (Testing on Object IDs: ['0_007142']) ---
  Training data shape for fold: (2822, 11)
  Test data shape for fold: (706, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 2...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.01, 100.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 2 (Data size: 2822)...
  GPR fitting complete. Time taken: 109.69 seconds.
  Learned kernel for fold 2: 0.746**2 * RBF(length_scale=0.0879) + WhiteKernel(noise_level=0.174)
  Predicting with GPR for fold 2...
  Fold 2 Test MSE: 0.000080
  Fold 2 Test R2 Score: -22.999342
--- End of Fold 2 ---

--- Fold 3 (Testing on Object IDs: ['0_01']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 3...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.01, 100.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 3 (Data size: 2823)...
  GPR fitting complete. Time taken: 118.55 seconds.
  Learned kernel for fold 3: 0.754**2 * RBF(length_scale=0.0826) + WhiteKernel(noise_level=0.174)
  Predicting with GPR for fold 3...
  Fold 3 Test MSE: 0.000033
  Fold 3 Test R2 Score: -4.156575
--- End of Fold 3 ---

--- Fold 4 (Testing on Object IDs: ['0_01818']) ---
  Training data shape for fold: (2823, 11)
  Test data shape for fold: (705, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 4...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.01, 100.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 4 (Data size: 2823)...
  GPR fitting complete. Time taken: 122.42 seconds.
  Learned kernel for fold 4: 0.757**2 * RBF(length_scale=0.079) + WhiteKernel(noise_level=0.104)
  Predicting with GPR for fold 4...
  Fold 4 Test MSE: 0.000122
  Fold 4 Test R2 Score: -4.676015
--- End of Fold 4 ---

--- Fold 5 (Testing on Object IDs: ['0_05']) ---
  Training data shape for fold: (2821, 11)
  Test data shape for fold: (707, 11)
  Calculated average FFT baseline for this fold from 8 original first rows.
  'Position_cm' standardized for fold.
  Target 'Curvature' standardized for fold training.
  Initializing GPR model for fold 5...
  Using RBF Kernel with length_scale_init=1.0, length_scale_bounds=(0.01, 100.0)
  Using WhiteKernel with noise_level_init=0.2, noise_bounds=(0.05, 10.0)
  Fitting GPR for fold 5 (Data size: 2821)...
  GPR fitting complete. Time taken: 145.85 seconds.
  Learned kernel for fold 5: 0.835**2 * RBF(length_scale=0.0869) + WhiteKernel(noise_level=0.347)
  Predicting with GPR for fold 5...
  Fold 5 Test MSE: 0.001088
  Fold 5 Test R2 Score: -5.633114
--- End of Fold 5 ---

--- Cross-Validation Finished ---

Cross-Validation Results Summary:
   fold object_tested_str       mse          r2  fitting_time_s
0     1             0_005  0.000441 -276.486249      145.453713
1     2          0_007142  0.000080  -22.999342      109.692563
2     3              0_01  0.000033   -4.156575      118.547048
3     4           0_01818  0.000122   -4.676015      122.423953
4     5              0_05  0.001088   -5.633114      145.853156

Average CV MSE: 0.000353 (Std: 0.000441)
Average CV R2 Score: -62.790259 (Std: 119.719888)
Average Fitting Time per Fold: 128.39s
CV results saved to gpr_cv_results.csv

--- GPR Training and Cross-Validation Script Finished ---
Next steps: 
1. Analyze CV results from 'gpr_cv_results.csv': Check consistency, errors per object, learned kernels.
2. If training time per fold was too long with N_downsample_factor=2, try N_downsample_factor=3.
3. Hyperparameter Tuning: Based on results, you might adjust kernel choices, initial parameters, or bounds.
4. Final Model Training: Once satisfied, train a final GPR model on ALL development data.
5. Final Evaluation: Test this final model on your hold-out test set (processed runs 3 & 4).
.venvbipinrai@Bipins-MacBook-Pro experimental interpolation % 

-------------------

fold,object_tested,mse,r2,fitting_time_s,learned_kernel,object_tested_str
1,0_005,0.0004406435513846752,-276.48624867506027,145.45371317863464,0.811**2 * RBF(length_scale=0.086) + WhiteKernel(noise_level=0.186),0_005
2,0_007142,7.981146386030901e-05,-22.99934224023325,109.69256281852722,0.746**2 * RBF(length_scale=0.0879) + WhiteKernel(noise_level=0.174),0_007142
3,0_01,3.304914778036943e-05,-4.156575430213985,118.54704809188843,0.754**2 * RBF(length_scale=0.0826) + WhiteKernel(noise_level=0.174),0_01
4,0_01818,0.0001218828236253581,-4.676014528142097,122.42395305633545,0.757**2 * RBF(length_scale=0.079) + WhiteKernel(noise_level=0.104),0_01818
5,0_05,0.001087954276248076,-5.633114439230651,145.85315608978271,0.835**2 * RBF(length_scale=0.0869) + WhiteKernel(noise_level=0.347),0_05
